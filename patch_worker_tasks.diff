*** Begin Patch
*** Update File: worker_tasks.py
@@
-from meilisearch import Client as MeiliClient
+from meilisearch import Client as MeiliClient
+import logging
+logger = logging.getLogger(__name__)
@@
-    meili = MeiliClient(MEILI_URL, MEILI_KEY)
+    # create Meili client (works with different client versions)
+    try:
+        meili = MeiliClient(MEILI_URL, MEILI_KEY)
+    except TypeError:
+        # fallback for older/newer clients
+        meili = MeiliClient(MEILI_URL)
@@
-    # somewhere later in ingestion
-    meili.index("kb_docs").add_documents(docs)
+    # Ensure docs is a serializable list-of-dicts for Meili
+    try:
+        docs_list = list(docs)
+    except TypeError:
+        # if docs is single object, coerce to single-element list
+        docs_list = [docs]
+
+    # coerce elements to dicts (Meili expects objects or list of objects)
+    sanitized = []
+    for d in docs_list:
+        if isinstance(d, dict):
+            sanitized.append(d)
+        else:
+            # best-effort coercion; put data under 'text' key to avoid malformed payload
+            try:
+                sanitized.append(dict(d))
+            except Exception:
+                sanitized.append({"text": str(d)})
+
+    if sanitized:
+        try:
+            meili.index("kb_docs").add_documents(sanitized)
+        except Exception as e:
+            logger.exception("Failed to add documents to Meili: %s", e)
+            raise
+    else:
+        logger.info("No documents to send to Meili (empty sanitized list).")
*** End Patch

