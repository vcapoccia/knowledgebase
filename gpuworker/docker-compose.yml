services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: kb
      POSTGRES_USER: kbuser
      POSTGRES_PASSWORD: kbpass
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kbuser -d kb"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  meili:
    image: getmeili/meilisearch:v1.11.3
    environment:
      MEILI_MASTER_KEY: change_me_meili_key
      MEILI_ENV: development
    ports: ["7700:7700"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:7700/health"]
      interval: 5s
      timeout: 3s
      retries: 20

  qdrant:
    image: qdrant/qdrant:v1.9.1
    ports: ["6333:6333"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:6333/collections"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  ollama:
    image: ollama/ollama:latest
    container_name: kbsearch-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    command: serve
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/"]
      interval: 10s
      timeout: 5s
      retries: 5
    # ðŸŽ® GPU per Ollama - Accelera Llama3/Mistral
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  api:
    build:
      context: .
      dockerfile: Dockerfile_api
    environment:
      REDIS_URL: redis://redis:6379/0
      RQ_QUEUE: kb_ingestion
      MEILI_URL: http://meili:7700
      MEILI_KEY: change_me_meili_key
      QDRANT_URL: http://qdrant:6333
      POSTGRES_DSN: postgres://kbuser:kbpass@postgres:5432/kb
      KB_ROOT: /mnt/kb
      OLLAMA_URL: http://ollama:11434
    depends_on:
      - postgres
      - meili
      - qdrant
      - redis
      - ollama
    ports: ["8000:8000"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - /mnt/kb:/mnt/kb:ro
    # ðŸŽ® GPU per API - Accelera embedding durante ricerca
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  worker:
    build:
      context: .
      dockerfile: Dockerfile_worker
    environment:
      REDIS_URL: redis://redis:6379/0
      RQ_QUEUE: kb_ingestion
      MEILI_URL: http://meili:7700
      MEILI_KEY: change_me_meili_key
      QDRANT_URL: http://qdrant:6333
      POSTGRES_DSN: postgres://kbuser:kbpass@postgres:5432/kb
      KB_ROOT: /mnt/kb
      OLLAMA_URL: http://ollama:11434
      # Opzionale: forza CPU se vuoi testare senza GPU
      # CUDA_VISIBLE_DEVICES: ""
    depends_on:
      - postgres
      - meili
      - qdrant
      - redis
      - ollama
    command: >
      bash -lc "rq worker -u ${REDIS_URL} ${RQ_QUEUE}"
    volumes:
      - /mnt/kb:/mnt/kb:ro
    # ðŸŽ® GPU per WORKER - CRITICO per ingestion veloce!
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

volumes:
  pgdata:
  ollama_data:
