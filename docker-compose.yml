services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kb}         # << allineato al codice
      POSTGRES_USER: ${POSTGRES_USER:-kbuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kbpass}
    ports: ["${POSTGRES_PORT:-5432}:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kbuser -d kb"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  meili:
    image: getmeili/meilisearch:v1.11.3
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-change_me_meili_key}
      MEILI_ENV: development
    ports: ["${MEILI_PORT:-7700}:7700"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:7700/health"]
      interval: 5s
      timeout: 3s
      retries: 20

  qdrant:
    image: qdrant/qdrant:v1.9.1   # combacia con il client nel codice
    ports: ["${QDRANT_PORT:-6333}:6333"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:6333/collections"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7
    ports: ["${REDIS_PORT:-6379}:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      dockerfile: Dockerfile_api
    environment:
      REDIS_URL: redis://redis:6379/0
      RQ_QUEUE: kb_ingestion
      MEILI_URL: http://meili:7700
      MEILI_KEY: ${MEILI_MASTER_KEY:-change_me_meili_key}
      QDRANT_URL: http://qdrant:6333
      # << allineato al codice
      POSTGRES_DSN: postgres://${POSTGRES_USER:-kbuser}:${POSTGRES_PASSWORD:-kbpass}@postgres:5432/${POSTGRES_DB:-kb}
      KB_ROOT: ${KB_CONTAINER_DIR:-/mnt/kb}
    depends_on:
      - postgres
      - meili
      - qdrant
      - redis
    ports: ["${API_PORT:-8000}:8000"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - ${KB_HOST_DIR:-/mnt/kb}:${KB_CONTAINER_DIR:-/mnt/kb}:ro

  worker:
    build:
      context: .
      dockerfile: Dockerfile_worker
    environment:
      REDIS_URL: redis://redis:6379/0
      RQ_QUEUE: kb_ingestion
      MEILI_URL: http://meili:7700
      MEILI_KEY: ${MEILI_MASTER_KEY:-change_me_meili_key}
      QDRANT_URL: http://qdrant:6333
      # << allineato al codice
      POSTGRES_DSN: postgres://${POSTGRES_USER:-kbuser}:${POSTGRES_PASSWORD:-kbpass}@postgres:5432/${POSTGRES_DB:-kb}
      KB_ROOT: ${KB_CONTAINER_DIR:-/mnt/kb}
    depends_on:
      - postgres
      - meili
      - qdrant
      - redis
    command: >
      bash -lc "rq worker -u ${REDIS_URL} ${RQ_QUEUE}"
    volumes:
      - ${KB_HOST_DIR:-/mnt/kb}:${KB_CONTAINER_DIR:-/mnt/kb}:ro

volumes:
  pgdata:
